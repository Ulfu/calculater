/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package raknare;

/**
 *
 * @author Kristian
 */
public class raknareFrame extends javax.swing.JFrame {

    /**
     * Creates new form raknareFrame
     */
    public raknareFrame() {
        initComponents();
    }
boolean reset = true; //If true replace String in display.
boolean decimal = false; //True if decimal has been writen.

int counter = 0; //count calcuted for continous counting
double num1;    //First number
double num2;    //Second number
boolean Continue = false; //Tell the program that num1 has not been set yet.
double memory = 0;

String operator;    //Keep track on the current operator.
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        taldisplaytxf = new javax.swing.JTextField();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        dotbtn = new javax.swing.JButton();
        btnSub = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDiv = new javax.swing.JButton();
        btnMult = new javax.swing.JButton();
        btnEq = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnMemClear = new javax.swing.JButton();
        btnMemAdd = new javax.swing.JButton();
        btnMemSub = new javax.swing.JButton();
        btnMemRec = new javax.swing.JButton();
        btnNegate = new javax.swing.JButton();
        btnSquareRoot = new javax.swing.JButton();
        btnSquare = new javax.swing.JButton();
        btnCubic = new javax.swing.JButton();
        btnInvert = new javax.swing.JButton();
        btnFactorial = new javax.swing.JButton();
        btnXY = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taldisplaytxf.setText("0");

        btn7.setText("7");
        btn7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        dotbtn.setText(".");
        dotbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotbtnActionPerformed(evt);
            }
        });

        btnSub.setText("-");
        btnSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubActionPerformed(evt);
            }
        });

        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDiv.setText("/");
        btnDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivActionPerformed(evt);
            }
        });

        btnMult.setText("*");
        btnMult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultActionPerformed(evt);
            }
        });

        btnEq.setText("=");
        btnEq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqActionPerformed(evt);
            }
        });

        btnReset.setText("C");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnMemClear.setText("MC");
        btnMemClear.setEnabled(false);
        btnMemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemClearActionPerformed(evt);
            }
        });

        btnMemAdd.setText("M+");
        btnMemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemAddActionPerformed(evt);
            }
        });

        btnMemSub.setText("M-");
        btnMemSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemSubActionPerformed(evt);
            }
        });

        btnMemRec.setText("MR");
        btnMemRec.setEnabled(false);
        btnMemRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemRecActionPerformed(evt);
            }
        });

        btnNegate.setText("+/-");
        btnNegate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegateActionPerformed(evt);
            }
        });

        btnSquareRoot.setText("âˆšx");
        btnSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareRootActionPerformed(evt);
            }
        });

        btnSquare.setText("x^2");
        btnSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareActionPerformed(evt);
            }
        });

        btnCubic.setText("x^3");
        btnCubic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCubicActionPerformed(evt);
            }
        });

        btnInvert.setText("1/x");
        btnInvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvertActionPerformed(evt);
            }
        });

        btnFactorial.setText("n!");
        btnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorialActionPerformed(evt);
            }
        });

        btnXY.setText("x^y");
        btnXY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXYActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(taldisplaytxf)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnSquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSquare, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCubic, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInvert, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                    .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btn0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dotbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSub, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(btnDiv, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(btnMult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNegate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMemClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMemAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMemSub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMemRec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXY, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(taldisplaytxf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMemSub)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMemRec))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn7)
                            .addComponent(btn8)
                            .addComponent(btn9)
                            .addComponent(btnSub)
                            .addComponent(btnReset)
                            .addComponent(btnMemClear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn4)
                            .addComponent(btn5)
                            .addComponent(btn6)
                            .addComponent(btnAdd)
                            .addComponent(btnMemAdd)
                            .addComponent(btnNegate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn1)
                                    .addComponent(btn2)
                                    .addComponent(btn3)
                                    .addComponent(btnDiv))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn0)
                                    .addComponent(dotbtn)
                                    .addComponent(btnMult)))
                            .addComponent(btnEq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSquare, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnCubic, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnXY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSquareRoot)
                        .addComponent(btnInvert)
                        .addComponent(btnFactorial)))
                .addGap(113, 113, 113))
        );

        pack();
    }// </editor-fold>                        

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("7");
    }                                    

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //reset values
        taldisplaytxf.setText("0");
        Continue = false;
        reset = true;
        decimal = false;
        num1 = 0;
        num2 = 0;
        counter = 0;
    }                                        

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("8");
    }                                    

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("9");
    }                                    

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("4");
    }                                    

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("5");
    }                                    

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("6");
    }                                    

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("1");
    }                                    

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("2");
    }                                    

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("3");
    }                                    

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        numberButton("0");
    }                                    

    private void dotbtnActionPerformed(java.awt.event.ActionEvent evt) {                                       
        
        if (decimal == false) {
            taldisplaytxf.setText(taldisplaytxf.getText() + ".");
            decimal = true;
            }
        
    }                                      

    private void btnSubActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try{setOperator("Subtract");
        if (Continue == true || counter > 1) {executeQuals();
                     reset = true;   
            }
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0); //If empty set display to 0
        }
    }                                      

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try{setOperator("Add");
        if (Continue == true || counter > 1) {executeQuals();
                     reset = true;   
            }
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                      

    private void btnDivActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try{
            setOperator("Divide");
            if (Continue == true || counter > 1) {executeQuals();
                     reset = true;   
            }
        }   
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                      

    private void btnMultActionPerformed(java.awt.event.ActionEvent evt) {                                        
        try {setOperator("Mult");
        if (Continue == true || counter > 1) {executeQuals();
                     reset = true;   
            }
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                       

    private void btnEqActionPerformed(java.awt.event.ActionEvent evt) {                                      
        try{    
            executeQuals();
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                     

    private void btnMemClearActionPerformed(java.awt.event.ActionEvent evt) {                                            
        memory = 0;
        memoryEnable();
    }                                           

    private void btnMemAddActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try{
            memory += getNumDisplay();
            memoryEnable(); //Enable memory buttons if number is stored
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                         

    private void btnMemSubActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            memory -= getNumDisplay();
            memoryEnable();
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                         

    private void btnMemRecActionPerformed(java.awt.event.ActionEvent evt) {                                          
        setNumDisplay(memory);
    }                                         

    private void btnNegateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try{
            setNumDisplay((-1) * getNumDisplay());
            reset = false;
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                         

    private void btnSquareRootActionPerformed(java.awt.event.ActionEvent evt) {                                              
        try{
        setNumDisplay(Math.sqrt(getNumDisplay()));
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
        reset = true;
    }                                             

    private void btnSquareActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try{double tal = getNumDisplay();
            tal = Calculate(tal,2,"Exponentiation");
            setNumDisplay(tal);
            reset = true;
            num1 = tal;
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                         

    private void btnCubicActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try {double tal = getNumDisplay();
            tal = Calculate(tal,3,"Exponentiation");
            setNumDisplay(tal);
            reset = true;
            num1 = tal;
        }   
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                        

    private void btnInvertActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try{double tal = getNumDisplay();
            tal = Calculate(1,tal,"Divide");
            setNumDisplay(tal);
            reset = true;
            num1 = tal;
        }   
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                         

    private void btnFactorialActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try {    setNumDisplay((factorial((int)getNumDisplay())));}
        catch (java.lang.StackOverflowError negative){
            taldisplaytxf.setText("Error: Negative number");
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
        reset = true;
    }                                            

    private void btnXYActionPerformed(java.awt.event.ActionEvent evt) {                                      
        try {setOperator("Exponentiation");
            if (Continue == true || counter > 1) executeQuals(); reset = true;
        }
        catch (java.lang.NumberFormatException empty){
            setNumDisplay(0);
        }
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(raknareFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(raknareFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(raknareFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(raknareFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new raknareFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCubic;
    private javax.swing.JButton btnDiv;
    private javax.swing.JButton btnEq;
    private javax.swing.JButton btnFactorial;
    private javax.swing.JButton btnInvert;
    private javax.swing.JButton btnMemAdd;
    private javax.swing.JButton btnMemClear;
    private javax.swing.JButton btnMemRec;
    private javax.swing.JButton btnMemSub;
    private javax.swing.JButton btnMult;
    private javax.swing.JButton btnNegate;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSquare;
    private javax.swing.JButton btnSquareRoot;
    private javax.swing.JButton btnSub;
    private javax.swing.JButton btnXY;
    private javax.swing.JButton dotbtn;
    private javax.swing.JTextField taldisplaytxf;
    // End of variables declaration                   

    private void setOperator(String operator) {
        if (Continue == false) num1 = getNumDisplay(); //Do not overwrite previus value
        this.operator = operator;
        reset = true;
        counter++;
    }
    private double Calculate(double num1, double num2, String operator) {
        double answer = 0;
        //Choose a operation.
        if ("Subtract".equals(operator)) {
            answer = num1 - num2;
        }
        else if ("Add".equals(operator)) {
            answer = num1 + num2;
        }
        else if ("Divide".equals(operator)) {
            answer = num1 / num2;
        }
        else if ("Mult".equals(operator)) {
            answer = num1 * num2;
        }
        else if ("Exponentiation".equals(operator)) {
            answer = xExponentiationY(num1, (int)num2); //Make sure that the exponent is a Integer.
        }

        return answer;
    }
    
    private int factorial(int n) {//Count the factorial
        if (n == 0) n = 1;
        else if (n == 1)    n = 1;
        else n *= factorial(n-1); 
        
        return n;
    }
    
    private double xExponentiationY(double x, int y) {
        if (y > 1)  x *= xExponentiationY(x, (y-1));

    return x;
    }
    
    private void numberButton(String number) {
        if (reset) { //Reset if rhis is the first char in the number.
            taldisplaytxf.setText(number);
            reset = false; //Stop reseting. 
            if ("Exponentiation".equals(operator))   decimal = true; //Do not allow decimal for the exponent
            else    decimal = false;
        }
        else {
            taldisplaytxf.setText(taldisplaytxf.getText() + number); //Add char to current String in display.
        }
    }
    
    private double getNumDisplay() {
        return Double.parseDouble(taldisplaytxf.getText());
    }
    private void setNumDisplay(double num) {
        taldisplaytxf.setText(Double.toString(num));
    }
    
    private void memoryEnable() { //Enable or disable memory-rec and -clear
        if (memory == 0){
            btnMemRec.setEnabled(false);
            btnMemClear.setEnabled(false);
        }
        else {
            btnMemRec.setEnabled(true);            
            btnMemClear.setEnabled(true);
        }
    }
    
    private void executeQuals() {
        num2 = getNumDisplay(); //Set the second number to current the current number in the display.
        double answer = Calculate(num1, num2, operator); //Call for calculate function.
        setNumDisplay(answer); // Show answer.
        num1 = answer;  //Set the answer to the first number for further calculations.
        Continue = false;    //Tell the program to no longer get the first number from the display.
        counter = 0;


    }
}
